// Code generated by MockGen. DO NOT EDIT.
// Source: internal/domain/forum/application/repositories/question_attachments_repository.go

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	enterprise "github.com/intwone/ddd-golang/internal/domain/forum/enterprise"
)

// MockQuestionAttachmentsRepositoryInterface is a mock of QuestionAttachmentsRepositoryInterface interface.
type MockQuestionAttachmentsRepositoryInterface struct {
	ctrl     *gomock.Controller
	recorder *MockQuestionAttachmentsRepositoryInterfaceMockRecorder
}

// MockQuestionAttachmentsRepositoryInterfaceMockRecorder is the mock recorder for MockQuestionAttachmentsRepositoryInterface.
type MockQuestionAttachmentsRepositoryInterfaceMockRecorder struct {
	mock *MockQuestionAttachmentsRepositoryInterface
}

// NewMockQuestionAttachmentsRepositoryInterface creates a new mock instance.
func NewMockQuestionAttachmentsRepositoryInterface(ctrl *gomock.Controller) *MockQuestionAttachmentsRepositoryInterface {
	mock := &MockQuestionAttachmentsRepositoryInterface{ctrl: ctrl}
	mock.recorder = &MockQuestionAttachmentsRepositoryInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockQuestionAttachmentsRepositoryInterface) EXPECT() *MockQuestionAttachmentsRepositoryInterfaceMockRecorder {
	return m.recorder
}

// GetManyByQuestionID mocks base method.
func (m *MockQuestionAttachmentsRepositoryInterface) GetManyByQuestionID(questionID string) (*[]enterprise.QuestionAttachment, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetManyByQuestionID", questionID)
	ret0, _ := ret[0].(*[]enterprise.QuestionAttachment)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetManyByQuestionID indicates an expected call of GetManyByQuestionID.
func (mr *MockQuestionAttachmentsRepositoryInterfaceMockRecorder) GetManyByQuestionID(questionID interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetManyByQuestionID", reflect.TypeOf((*MockQuestionAttachmentsRepositoryInterface)(nil).GetManyByQuestionID), questionID)
}
