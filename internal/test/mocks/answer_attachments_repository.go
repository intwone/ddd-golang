// Code generated by MockGen. DO NOT EDIT.
// Source: internal/domain/forum/application/repositories/answer_attachments_repository.go

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	enterprise "github.com/intwone/ddd-golang/internal/domain/forum/enterprise"
)

// MockAnswerAttachmentsRepositoryInterface is a mock of AnswerAttachmentsRepositoryInterface interface.
type MockAnswerAttachmentsRepositoryInterface struct {
	ctrl     *gomock.Controller
	recorder *MockAnswerAttachmentsRepositoryInterfaceMockRecorder
}

// MockAnswerAttachmentsRepositoryInterfaceMockRecorder is the mock recorder for MockAnswerAttachmentsRepositoryInterface.
type MockAnswerAttachmentsRepositoryInterfaceMockRecorder struct {
	mock *MockAnswerAttachmentsRepositoryInterface
}

// NewMockAnswerAttachmentsRepositoryInterface creates a new mock instance.
func NewMockAnswerAttachmentsRepositoryInterface(ctrl *gomock.Controller) *MockAnswerAttachmentsRepositoryInterface {
	mock := &MockAnswerAttachmentsRepositoryInterface{ctrl: ctrl}
	mock.recorder = &MockAnswerAttachmentsRepositoryInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockAnswerAttachmentsRepositoryInterface) EXPECT() *MockAnswerAttachmentsRepositoryInterfaceMockRecorder {
	return m.recorder
}

// GetManyByAnswerID mocks base method.
func (m *MockAnswerAttachmentsRepositoryInterface) GetManyByAnswerID(answerID string) ([]enterprise.AnswerAttachment, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetManyByAnswerID", answerID)
	ret0, _ := ret[0].([]enterprise.AnswerAttachment)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetManyByAnswerID indicates an expected call of GetManyByAnswerID.
func (mr *MockAnswerAttachmentsRepositoryInterfaceMockRecorder) GetManyByAnswerID(answerID interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetManyByAnswerID", reflect.TypeOf((*MockAnswerAttachmentsRepositoryInterface)(nil).GetManyByAnswerID), answerID)
}
